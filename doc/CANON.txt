/*!

@mainpage CANON (version 1.0): Complete search Algorithms for Nonlinear OptimizatioN

@author Benoit C. Chachuat <tt>(b.chachuat@imperial.ac.uk)</tt> and Tanuj Karia <tt>(tanuj.karia17@imperial.ac.uk)</tt>
@date 2022

<CENTER><TABLE border="1">
<TR>
<TD><CENTER><TABLE BORDER=0>
  <TR>
  <TD>CANON is a C++ library for global optimization of nonlinear models using complete search algorithms</TD>
  </TR>
  </TABLE></CENTER></TD>
</TR>
</TABLE></CENTER> 

The complete-search algorithms current implemented in <a>CANON</a> are:
- Reformulation of the MINLP model as an equivalent mixed-integer quadratically-constrained program (MIQCP), followed by MIQCP global optimization using the solver <A href="http://www.gurobi.com/">GUROBI</A>. Various preprocessing strategies can be used, including local search and bounds tightening, prior to the MIQCP reformulation. The exact reformulation of polynomial subexpressions into quadratic form relies on the introduction of auxiliary variables and constraints. A number of nonlinear terms cam also be handled by <A href="http://www.gurobi.com/">GUROBI</A> via their approximation as piecewise linear expressions; or, alternatively, they can be enclosed by polynomial models within <a>CANON</a>.
- Piecewise linearization of the MINLP model by progressively adding break-points to a MIP relaxation, thereby creating a convergent sequence of relaxations. The MIP relaxations are solved using  <A href="http://www.gurobi.com/">GUROBI</A>. Various preprocessing strategies can be used, including local search and bounds tightening, prior to the MIP relaxation hierarchy.
.
<a>CANON</a> can be used by compiling the libraries as an executable, by passing a GAMS model and an option file (optional). Alternatively, <a>CANON</a> may be called from a C++ program by defining the optimization problem using built-in expression trees (from the library <A href="https://projects.coin-or.org/MCpp">MC++</A>.


\section sec_CANON_install What do I need to run CANON?

CANON is released as open source code under the <A href="http://www.eclipse.org/legal/epl-v10.html">Eclipse Public License (EPL)</A>.

CANON depends on the following third-party libraries:
- <A href="https://projects.coin-or.org/MCpp">MC++</A> (version 2.1) for construction, manipulation and bounding of factorable functions
- <A href="https://web.stanford.edu/group/SOL/snopt.htm">SNOPT</A> (version 7.7) for local solution of NLP problems
- <A href="http://www.gurobi.com/">GUROBI</A> (version 9.5) for solution of LP/QP/MILP/MIQP/MIQCQP problems
- <A href="https://www.boost.org/">BOOST</A> for managing the commandline and option files as well as random sampling and interval arithmetic
- <A href="hhttps://www.gams.com/">GAMS</A> for importing model files written in the GAMS language
.

On distribution, the main directory should contain three subdirectories:
- <tt>src</tt> contains the source code of CANON, which consists of header files only and needs linking to third-party libraries.
- <tt>doc</tt> contains the Doxygen documentation for CANON, which needs to be compiled using the file <tt>CANON.dox</tt> and can then be accessed by opening the file <tt>doc/html/index.html</tt> with any browser.
- <tt>test</tt> contains simple examples that should help you understand how to use different components of CANON, such as local search, relaxations, and global search.
.

<CENTER><TABLE border="1">
<TR>
<TD><CENTER><TABLE BORDER=0>
  <TR>
  <TD>CANON has been developed and tested primarily under Ubuntu Linux with the compiler <a href="http://gcc.gnu.org/"><tt>gcc</tt></a> (with C++17)</TD>
  </TR>
  </TABLE></CENTER></TD>
</TR>
</TABLE></CENTER> 


\section sec_CANON_doc Where can I learn more about CANON?

A description of the main components of CANON can be found under <A HREF="pages.html">Related Pages</A>:
- \ref page_NLPSLV_SNOPT Local (Continuous) Nonlinear Optimization interfacing SNOPT with MC++
- \ref page_MINLPSLV Local Mixed-Integer Nonlinear Optimization via Outer-Approximation using MC++
- \ref page_MINLPBND Bounding of Factorable Mixed-Integer Nonlinear Programs using MC++
- \ref page_MINLGO Global Mixed-Integer Nonlinear Optimization using MC++
.

<CENTER><TABLE border="1">
<TR>
<TD><CENTER><TABLE BORDER=0>
  <TR>
  <TD>We hope you will enjoy using CANON and find it useful!</TD>
  </TR>
  <TR>
  <TD> For more information or to provide us feedback, please email <a href="mailto:b.chachuat@imperial.ac.uk">Benoit Chachuat</a></TD>
  </TR>
  </TABLE></CENTER></TD>
</TR>
</TABLE></CENTER> 

*/

